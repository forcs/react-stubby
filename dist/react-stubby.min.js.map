{"version":3,"file":"react-stubby.min.js","sources":["../src/constant.js","../src/AddOn.js","../src/StubConsumer.js","../src/StubProvider.js","../src/StubContextProvider.js","../src/Stub.js","../src/index.js"],"sourcesContent":["export const DEFAULT_STUB_NAME = '$$default'\n\nexport const ADD_ON_DN = 'Stub.AddOn'\n\nexport const ADD_ON_HOC_DN = `StubConsumer(${ADD_ON_DN})`\n","import PropTypes from 'prop-types'\nimport {\n  DEFAULT_STUB_NAME,\n  ADD_ON_DN\n} from './constant'\n\nconst AddOn = () => null\n\nAddOn.propTypes = { name: PropTypes.string }\nAddOn.defaultTypes = { name: DEFAULT_STUB_NAME }\nAddOn.displayName = ADD_ON_DN\n\nexport default AddOn\n","import React from 'react'\nimport AddOn from './AddOn'\n\nimport {\n  ADD_ON_HOC_DN\n} from './constant'\n\nexport default (stub) => (WrappedComponent) => {\n  const wrapper = (props) => (\n    <AddOn stub={stub}>\n      <WrappedComponent {...props} />\n    </AddOn>\n  )\n\n  wrapper.displayName = ADD_ON_HOC_DN\n\n  return wrapper\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {\n  DEFAULT_STUB_NAME,\n  ADD_ON_DN,\n  ADD_ON_HOC_DN\n} from './constant'\n\nfunction getDisplayName (component) {\n  return component.displayName || component.name || 'component'\n}\n\nexport default (WrappedComponent) => {\n  return class StubWrapper extends React.Component {\n    static displayName = `StubProvider(${getDisplayName(WrappedComponent)})`\n\n    static childContextTypes = {\n      requestAddOnRenderer: PropTypes.func\n    }\n\n    addOnRenderers = {}\n\n    getChildContext () {\n      return {\n        requestAddOnRenderer: this.addOnRendererRegister.bind(this)\n      }\n    }\n\n    addOnRendererRegister (name) {\n      return () => {\n        return this.addOnRenderers[name]\n      }\n    }\n\n    render () {\n      const {\n        children,\n        ...restProps\n      } = this.props\n\n      if (children) {\n        const arr = React.Children.toArray(children)\n        const nameChecked = []\n        this.addOnRenderers = {}\n        arr.forEach(item => {\n          const itemType = item.type\n          if (itemType.displayName === ADD_ON_HOC_DN) {\n            item = itemType(children.props)\n          }\n          if (item.type.displayName === ADD_ON_DN) {\n            const stubName = item.props.stub || DEFAULT_STUB_NAME\n            // checking, ensure the uniqueness of the consumer\n            if (nameChecked.findIndex(item => item === stubName) !== -1) {\n              throw new Error(`Stub(${stubName}) has been occupied`)\n            }\n\n            this.addOnRenderers[stubName] = item.props.children\n            // cache for next checking\n            nameChecked.push(stubName)\n          }\n        })\n      }\n      return (<WrappedComponent {...restProps} />)\n    }\n  }\n}\n","import React from 'react'\nimport StubProvider from './StubProvider'\n\nexport default class StubContextProvider extends React.Component {\n  componentWillUnmount () {\n    this.Wrapped = null\n  }\n\n  componentWillUpdate () {\n    this.Wrapped = null\n  }\n\n  render () {\n    if (!this.Wrapped) {\n      this.Wrapped = StubProvider(() => React.Children.only(this.props.children))\n    }\n    return <this.Wrapped />\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {\n  DEFAULT_STUB_NAME\n} from './constant'\n\nexport default class Stub extends React.Component {\n  static contextTypes = {\n    requestAddOnRenderer: PropTypes.func\n  }\n\n  static propTypes = {\n    name: PropTypes.string\n  }\n\n  static defaultProps = {\n    name: DEFAULT_STUB_NAME\n  }\n\n  constructor (props, context) {\n    super(props, context)\n    this.addOnRenderer = context.requestAddOnRenderer(props.name)\n  }\n\n  render () {\n    return (this.addOnRenderer && this.addOnRenderer()) ||\n      this.props.children ||\n      null\n  }\n}\n","import _StubConsumer from './StubConsumer'\nimport _StubProvider from './StubProvider'\nimport _StubContextProvider from './StubContextProvider'\nimport _AddOn from './AddOn'\nimport _Stub from './Stub'\n\nexport const StubConsumer = _StubConsumer\n\nexport const StubProvider = _StubProvider\n\nexport const StubContextProvider = _StubContextProvider\n\n_Stub.AddOn = _AddOn\n\nexport const Stub = _Stub\n"],"names":["AddOn","propTypes","name","PropTypes","string","defaultTypes","displayName","WrappedComponent","component","addOnRenderers","this","addOnRendererRegister","bind","_this2","props","children","restProps","arr","React","Children","toArray","nameChecked","forEach","itemType","item","type","stubName","stub","findIndex","Error","push","Component","childContextTypes","func","StubContextProvider","Wrapped","StubProvider","only","Stub","context","addOnRenderer","requestAddOnRenderer","contextTypes","defaultProps","StubConsumer","wrapper","_StubProvider","_StubContextProvider","_Stub","_AddOn"],"mappings":"4WAAO,ICMDA,EAAQ,kBAAM,MAEpBA,EAAMC,WAAcC,KAAMC,EAAUC,QACpCJ,EAAMK,cAAiBH,KDTU,aCUjCF,EAAMM,YDRmB,aEKzB,wzBCKA,eAAgBC,WAJSC,4NAYrBC,gHAI0BC,KAAKC,sBAAsBC,KAAKF,qDAInCR,qBACd,kBACEW,EAAKJ,eAAeP,kDAQzBQ,KAAKI,MAFPC,IAAAA,SACGC,6IAGDD,EAAU,KACNE,EAAMC,EAAMC,SAASC,QAAQL,GAC7BM,UACDZ,oBACDa,QAAQ,gBACJC,EAAWC,EAAKC,qCAClBF,EAASjB,gBACJiB,EAASR,EAASD,QH7CZ,eG+CXU,EAAKC,KAAKnB,YAA2B,KACjCoB,EAAWF,EAAKV,MAAMa,MHlDP,gBGoDqC,IAAtDN,EAAYO,UAAU,mBAAQJ,IAASE,UACnC,IAAIG,cAAcH,2BAGrBjB,eAAeiB,GAAYF,EAAKV,MAAMC,WAE/Be,KAAKJ,aAIfR,gBAACX,EAAqBS,UAjDDE,EAAMa,aAC9BzB,8BANcE,EAM+BD,GALrCD,aAAeE,EAAUN,MAAQ,mBAOzC8B,wCACiB7B,EAAU8B,SCdjBC,uLAEZC,QAAU,wDAIVA,QAAU,wDAIVzB,KAAKyB,eACHA,QAAUC,EAAa,kBAAMlB,EAAMC,SAASkB,KAAKxB,EAAKC,MAAMC,aAE5DG,qBAAMiB,qBAbgCjB,EAAMa,WCGlCO,yBAaNxB,EAAOyB,4EACZzB,EAAOyB,aACRC,cAAgBD,EAAQE,qBAAqB3B,EAAMZ,iEAIhDQ,KAAK8B,eAAiB9B,KAAK8B,iBACjC9B,KAAKI,MAAMC,UACX,YArB4BG,EAAMa,WAAnBO,EACZI,mCACiBvC,EAAU8B,MAFfK,EAKZrC,gBACCE,EAAUC,QANCkC,EASZK,mBLfwB,aMM1B,IAAMC,WJCGjB,UAAS,SAACpB,OAClBsC,EAAU,SAAC/B,UACfI,mBAAOS,KAAMA,mBACVpB,EAAqBO,cAIlBR,uCAEDuC,IIRIT,EAAeU,EAEfZ,EAAsBa,EAEnCC,EAAMhD,MAAQiD,EAEd,IAAaX,EAAOU"}